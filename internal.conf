
    # Note: the image_filter directive does not work in the context of anything other than location (i.e. that's why the repetition that follows)
    location ~ ^/internal/resize/(\d+)/(\d+)/(.*)$ {
        allow 127.0.0.0/8;
        deny all;

        set $arg1 $1;
        set $arg2 $2;
        set $farg1 "/$1";
        set $farg2 "/$2";
        set $image_uri "$3$is_args$args";
        set $command 'resize';

        proxy_pass               $image_uri;
        # Handle redirects
        error_page 301 302 307 = @follow_target_redirect;

        # We reset these variables because technically we're in a different request

        # Perform the filter
        image_filter                resize $arg1 $arg2;
    }

    location ~ ^/internal/crop/(\d+)/(\d+)/(.*)$ {
        allow 127.0.0.0/8;
        deny all;

        # We reset these variables because technically we're in a different request
        set $arg1 $1;
        set $arg2 $2;
        set $farg1 "/$1";
        set $farg2 "/$2";
        set $image_uri "$3$is_args$args";
        set $command 'crop';

        proxy_pass                  $image_uri;
        # Handle redirects
        error_page 301 302 307 = @follow_target_redirect;


        # Perform the filter
        image_filter                crop $arg1 $arg2;
    }

    location ~ ^/internal/size/(.*)$ {
        allow 127.0.0.0/8;
        deny all;

        # We reset these variables because technically we're in a different request
        set $command 'size';
        set $farg1 "";
        set $farg2 "";
        set $image_uri "$1$is_args$args";

        proxy_pass                  $image_uri;
        # Handle redirects
        error_page 301 302 307 = @follow_target_redirect;


        # Perform the filter
        image_filter  size;
    }

    location ~ ^/internal/rotate/(\d+)/(.*)$ {
        allow 127.0.0.0/8;
        deny all;

        # We reset these variables because technically we're in a different request
        set $command 'rotate';
        set $arg1 $1;
        set $farg1 "/$arg1";
        set $farg2 "";
        set $image_uri "$2$is_args$args";

        proxy_pass                  $image_uri;
        # Handle redirects
        error_page 301 302 307 = @follow_target_redirect;


        image_filter                rotate $arg1;
    }

    location @follow_target_redirect {
        internal;
        # Note: we are not reusing the @process named location since we don't want to save two copies on disk
        # Set the Location header for a redirect to a the image uri (further proxying will reset it)
        set $image_uri $upstream_http_location;

        # This is intended to be the exact url that's also in the @process named location
	proxy_pass http://127.0.0.1/internal/$command$farg1$farg2/$image_uri;
    }

